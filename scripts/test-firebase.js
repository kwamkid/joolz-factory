// scripts/test-firebase.js
require("dotenv").config({ path: ".env.local" });

console.log("üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Firebase Configuration:");
console.log("=====================================");

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö environment variables
const requiredEnvVars = [
  "NEXT_PUBLIC_FIREBASE_API_KEY",
  "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN",
  "NEXT_PUBLIC_FIREBASE_PROJECT_ID",
  "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET",
  "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID",
  "NEXT_PUBLIC_FIREBASE_APP_ID",
];

let allConfigured = true;

requiredEnvVars.forEach((varName) => {
  const value = process.env[varName];
  if (value) {
    console.log(`‚úÖ ${varName}: ${value.substring(0, 10)}...`);
  } else {
    console.log(`‚ùå ${varName}: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡πà‡∏≤`);
    allConfigured = false;
  }
});

console.log("\nüîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Firebase Admin Configuration:");
console.log("=====================================");

if (process.env.FIREBASE_ADMIN_CLIENT_EMAIL) {
  console.log(
    `‚úÖ FIREBASE_ADMIN_CLIENT_EMAIL: ${process.env.FIREBASE_ADMIN_CLIENT_EMAIL}`
  );
} else {
  console.log("‚ùå FIREBASE_ADMIN_CLIENT_EMAIL: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡πà‡∏≤");
  allConfigured = false;
}

if (process.env.FIREBASE_ADMIN_PRIVATE_KEY) {
  console.log("‚úÖ FIREBASE_ADMIN_PRIVATE_KEY: ‡∏û‡∏ö‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß");
} else {
  console.log("‚ùå FIREBASE_ADMIN_PRIVATE_KEY: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡πà‡∏≤");
  allConfigured = false;
}

console.log("\n=====================================");
if (allConfigured) {
  console.log("‚úÖ Configuration ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô!");
} else {
  console.log("‚ùå Configuration ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå .env.local");
}

// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Firebase connection
if (allConfigured) {
  console.log("\nüîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Firebase...");

  const { initializeApp } = require("firebase/app");
  const { getAuth, signInWithEmailAndPassword } = require("firebase/auth");

  const firebaseConfig = {
    apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
    authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
    projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
    storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
    messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
    appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,
  };

  try {
    const app = initializeApp(firebaseConfig);
    console.log("‚úÖ Firebase initialized successfully!");

    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Auth
    const auth = getAuth(app);
    console.log("‚úÖ Firebase Auth initialized!");

    // ‡∏•‡∏≠‡∏á sign in
    console.log("\nüîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Login...");
    signInWithEmailAndPassword(auth, "admin@joolzfactory.com", "MKthailand47")
      .then((userCredential) => {
        console.log("‚úÖ Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! User:", userCredential.user.email);
        process.exit(0);
      })
      .catch((error) => {
        console.log("‚ùå Login ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", error.code, error.message);

        if (error.code === "auth/invalid-credential") {
          console.log("\nüí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:");
          console.log(
            "1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Email/Password authentication ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Firebase Console"
          );
          console.log("2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ user admin@joolzfactory.com ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á");
          console.log(
            "3. ‡∏•‡∏≠‡∏á‡∏£‡∏±‡∏ô npm run setup:admin ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á admin user ‡πÉ‡∏´‡∏°‡πà"
          );
        }

        process.exit(1);
      });
  } catch (error) {
    console.log("‚ùå Firebase initialization failed:", error.message);
    process.exit(1);
  }
}
